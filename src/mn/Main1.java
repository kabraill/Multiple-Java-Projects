/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mn;

import java.awt.BorderLayout;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.*;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.filechooser.FileNameExtensionFilter;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.filechooser.FileFilter;

import java.util.List;
import java.util.ArrayList;
import javax.swing.filechooser.FileSystemView;
import javax.swing.filechooser.FileView;

/**
 *
 * @author y08677
 */
public class Main1 extends javax.swing.JFrame implements ImageDimensionsListener {

    private List<DrawPanel> draw_panels = new ArrayList<DrawPanel>();
    int image_index_max = 0;
    String[] draw_tool = {"mouse"};

    public Main1() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jMenuItem7 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jPanel3 = new javax.swing.JPanel();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jColorChooser1 = new javax.swing.JColorChooser();
        jToolBar1 = new javax.swing.JToolBar();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        jMenuItem7.setText("jMenuItem7");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel2.setMinimumSize(new java.awt.Dimension(85, 10));
        jPanel2.setName(""); // NOI18N
        jPanel2.setPreferredSize(new java.awt.Dimension(85, 10));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jComboBox1, gridBagConstraints);

        jLayeredPane2.setLayout(new java.awt.GridBagLayout());

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jButton11.setText("p");
        jButton11.setToolTipText("");
        jButton11.setMaximumSize(new java.awt.Dimension(40, 40));
        jButton11.setMinimumSize(new java.awt.Dimension(40, 40));
        jButton11.setPreferredSize(new java.awt.Dimension(40, 40));
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 0.1;
        jPanel3.add(jButton11, gridBagConstraints);

        jButton12.setText("l");
        jButton12.setMaximumSize(new java.awt.Dimension(40, 40));
        jButton12.setMinimumSize(new java.awt.Dimension(40, 40));
        jButton12.setPreferredSize(new java.awt.Dimension(40, 40));
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.1;
        jPanel3.add(jButton12, gridBagConstraints);

        jButton13.setText("r");
        jButton13.setMaximumSize(new java.awt.Dimension(40, 40));
        jButton13.setMinimumSize(new java.awt.Dimension(40, 40));
        jButton13.setPreferredSize(new java.awt.Dimension(40, 40));
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 0.1;
        jPanel3.add(jButton13, gridBagConstraints);

        jButton14.setText("r");
        jButton14.setMaximumSize(new java.awt.Dimension(40, 40));
        jButton14.setMinimumSize(new java.awt.Dimension(40, 40));
        jButton14.setPreferredSize(new java.awt.Dimension(40, 40));
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 0.1;
        jPanel3.add(jButton14, gridBagConstraints);

        jButton15.setText("c");
        jButton15.setMaximumSize(new java.awt.Dimension(40, 40));
        jButton15.setMinimumSize(new java.awt.Dimension(40, 40));
        jButton15.setPreferredSize(new java.awt.Dimension(40, 40));
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 0.1;
        jPanel3.add(jButton15, gridBagConstraints);

        jButton16.setText("p");
        jButton16.setMaximumSize(new java.awt.Dimension(40, 40));
        jButton16.setMinimumSize(new java.awt.Dimension(40, 40));
        jButton16.setPreferredSize(new java.awt.Dimension(40, 40));
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 0.1;
        jPanel3.add(jButton16, gridBagConstraints);

        jButton17.setMaximumSize(new java.awt.Dimension(40, 40));
        jButton17.setMinimumSize(new java.awt.Dimension(40, 40));
        jButton17.setPreferredSize(new java.awt.Dimension(40, 40));
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 0.1;
        jPanel3.add(jButton17, gridBagConstraints);

        jButton18.setMaximumSize(new java.awt.Dimension(40, 40));
        jButton18.setMinimumSize(new java.awt.Dimension(40, 40));
        jButton18.setPreferredSize(new java.awt.Dimension(40, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 0.1;
        jPanel3.add(jButton18, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jLayeredPane2.add(jPanel3, gridBagConstraints);

        jScrollPane1.setViewportView(jLayeredPane2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel2.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        jPanel1.add(jPanel2, gridBagConstraints);

        jSplitPane1.setDividerLocation(400);
        jSplitPane1.setDividerSize(3);
        jSplitPane1.setLeftComponent(jTabbedPane1);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        jPanel4.add(jComboBox2, gridBagConstraints);

        jLayeredPane1.setLayout(new java.awt.GridBagLayout());

        jScrollPane2.setViewportView(jColorChooser1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jLayeredPane1.add(jScrollPane2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel4.add(jLayeredPane1, gridBagConstraints);

        jSplitPane1.setRightComponent(jPanel4);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel1.add(jSplitPane1, gridBagConstraints);

        jToolBar1.setRollover(true);
        jToolBar1.setMinimumSize(new java.awt.Dimension(4, 30));
        jToolBar1.setPreferredSize(new java.awt.Dimension(100, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jToolBar1, gridBagConstraints);

        getContentPane().add(jPanel1);

        jMenu1.setText("File");

        jMenuItem1.setText("New");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Open");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem5.setText("Save");
        jMenu1.add(jMenuItem5);

        jMenuItem6.setText("Save As");
        jMenuItem6.setToolTipText("");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem3.setText("jMenuItem3");
        jMenu2.add(jMenuItem3);

        jMenuItem4.setText("jMenuItem4");
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        // TODO add your handling code here:
        jSplitPane1.setDividerLocation(jSplitPane1.getWidth() - 300);
    }//GEN-LAST:event_formComponentResized

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        // Set custom file view to show the actual icons
        fileChooser.setFileView(new FileView() {
            @Override
            public Icon getIcon(File f) {
                // Get the system icon for the file or directory
                return FileSystemView.getFileSystemView().getSystemIcon(f);
            }
        });
        fileChooser.setDialogTitle("Choose an image file");

        fileChooser.setAcceptAllFileFilterUsed(false);

        // Add individual file filters for each image type
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("JPEG Files", "jpg", "jpeg"));
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("PNG Files", "png"));
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("GIF Files", "gif"));
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("BMP Files", "bmp"));

        // Add a combined filter for all image types and set it as default
        FileNameExtensionFilter imageFilter = new FileNameExtensionFilter("All Image Files", "jpg", "jpeg", "png", "gif", "bmp");
        fileChooser.addChoosableFileFilter(imageFilter);
        fileChooser.setFileFilter(imageFilter);

        // Add a custom "All Files" filter
        fileChooser.addChoosableFileFilter(new FileFilter() {
            @Override
            public boolean accept(File f) {
                return true; // Accept all files
            }

            @Override
            public String getDescription() {
                return "All Files";
            }
        });

        int returnValue = fileChooser.showOpenDialog(Main1.this);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            //loadImage(selectedFile);
            DrawPanel dp = new DrawPanel(draw_tool);
            draw_panels.add(dp);
            try {
                //draw_panels.get(draw_panels.size() - 1).setImage(ImageIO.read(selectedFile));
                dp.setImage(ImageIO.read(selectedFile));

                dp.setPreferredSize(new Dimension(dp.image.getWidth(), dp.image.getHeight()));
                dp.revalidate();
                dp.repaint();

                JPanel outerPanel = new JPanel(new GridBagLayout());
                outerPanel.setBackground(new java.awt.Color(204, 204, 204));

                outerPanel.add(dp, new java.awt.GridBagConstraints());

                JScrollPane scrollPane = new JScrollPane(outerPanel);
                // Create the horizontal and vertical rulers
                RulerComponent horizontalRuler = new RulerComponent(RulerComponent.HORIZONTAL);
                RulerComponent verticalRuler = new RulerComponent(RulerComponent.VERTICAL);

                JPanel contentPanel = new JPanel(new BorderLayout());
                contentPanel.add(horizontalRuler, BorderLayout.NORTH);
                contentPanel.add(verticalRuler, BorderLayout.WEST);
                contentPanel.add(scrollPane, BorderLayout.CENTER);

                jTabbedPane1.addTab("New Image", contentPanel);
                jTabbedPane1.setTabComponentAt(image_index_max, createTabComponent(jTabbedPane1, "New Image"));
                jTabbedPane1.setSelectedIndex(image_index_max);
                image_index_max++;

            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "Error loading image: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed


        
        Empty_image_frame frame = new Empty_image_frame(this);
        frame.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here
        draw_tool[0] = "pen";
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        draw_tool[0] = "line";
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        draw_tool[0] = "rectangle";
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        draw_tool[0] = "round_rectangle";
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        draw_tool[0] = "circle";
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        draw_tool[0] = "point";
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Save Image");

        fileChooser.setAcceptAllFileFilterUsed(false);

        // Add individual file filters for each image type
        FileNameExtensionFilter jpgFilter = new FileNameExtensionFilter("JPEG Files", "jpg", "jpeg");
        FileNameExtensionFilter pngFilter = new FileNameExtensionFilter("PNG Files", "png");
        FileNameExtensionFilter gifFilter = new FileNameExtensionFilter("GIF Files", "gif");
        FileNameExtensionFilter bmpFilter = new FileNameExtensionFilter("BMP Files", "bmp");
        fileChooser.addChoosableFileFilter(jpgFilter);
        fileChooser.addChoosableFileFilter(pngFilter);
        fileChooser.addChoosableFileFilter(gifFilter);
        fileChooser.addChoosableFileFilter(bmpFilter);

        // Add filter for all files
        FileNameExtensionFilter allImageFilesFilter = new FileNameExtensionFilter("All Image Files", "jpg", "jpeg", "png", "gif", "bmp");
        fileChooser.setFileFilter(allImageFilesFilter);

        int userSelection = fileChooser.showSaveDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();

            // Get the selected file filter
            FileNameExtensionFilter selectedFilter = (FileNameExtensionFilter) fileChooser.getFileFilter();
            String formatName = "png"; // Default format

            // Determine the format name based on the selected file filter
            if (selectedFilter == jpgFilter) {
                formatName = "jpg";
            } else if (selectedFilter == pngFilter) {
                formatName = "png";
            } else if (selectedFilter == gifFilter) {
                formatName = "gif";
            } else if (selectedFilter == bmpFilter) {
                formatName = "bmp";
            } else if (selectedFilter == allImageFilesFilter) {
                formatName = "png"; // Default to PNG if "All Image Files" is selected
            }

            // Ensure the file has the correct extension
            if (!fileToSave.getName().toLowerCase().endsWith("." + formatName)) {
                fileToSave = new File(fileToSave.getAbsolutePath() + "." + formatName);
            }

            JPanel outerPanel = null;
            int selectedIndex = jTabbedPane1.getSelectedIndex();

            if (selectedIndex != -1) {
                JPanel high_panel = (JPanel) jTabbedPane1.getComponentAt(selectedIndex);
                for (Component comp : high_panel.getComponents()) {
                    if (comp instanceof JScrollPane) {
                        JScrollPane scrl_pane = (JScrollPane) comp;
                        outerPanel = (JPanel) scrl_pane.getViewport().getView();
                        break;
                    }
                }
                //JPanel outerPanel = (JPanel) scrollPane.getViewport().getView();
                for (Component comp : outerPanel.getComponents()) {
                    if (comp instanceof DrawPanel) {
                        DrawPanel d_Panel = (DrawPanel) comp;
                        try {
                            ImageIO.write(d_Panel.getImage(), formatName, fileToSave);
                            JOptionPane.showMessageDialog(this, "Image saved successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                        } catch (IOException e) {
                            JOptionPane.showMessageDialog(this, "Error saving image: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                        }
                        break;
                    }
                }
            }
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        draw_tool[0] = "custom_line";
    }//GEN-LAST:event_jButton17ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main1().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onImageDimensionsProvided(int width, int height) {

        JPanel outerPanel = new JPanel(new GridBagLayout());
        outerPanel.setBackground(new java.awt.Color(204, 204, 204));

        DrawPanel innerPanel = new DrawPanel(draw_tool);
        innerPanel.setPreferredSize(new Dimension(width, height));
        innerPanel.setBackground(Color.WHITE);
        draw_panels.add(innerPanel);
        outerPanel.add(innerPanel, new java.awt.GridBagConstraints());

        JScrollPane scrollPane = new JScrollPane(outerPanel);
        // Create the horizontal and vertical rulers
        RulerComponent horizontalRuler = new RulerComponent(RulerComponent.HORIZONTAL);
        RulerComponent verticalRuler = new RulerComponent(RulerComponent.VERTICAL);

        JPanel contentPanel = new JPanel(new BorderLayout());
        contentPanel.add(horizontalRuler, BorderLayout.NORTH);
        contentPanel.add(verticalRuler, BorderLayout.WEST);
        contentPanel.add(scrollPane, BorderLayout.CENTER);

        jTabbedPane1.addTab("New Image", contentPanel);
        jTabbedPane1.setTabComponentAt(image_index_max, createTabComponent(jTabbedPane1, "New Image"));
        jTabbedPane1.setSelectedIndex(image_index_max);
        image_index_max++;
    }

    private JPanel createTabComponent(final JTabbedPane tabbedPane, String title) {
        JPanel tabComponent = new JPanel(new FlowLayout(FlowLayout.LEFT, 0, 0));
        tabComponent.setOpaque(false);

        JLabel titleLabel = new JLabel(title);
        tabComponent.add(titleLabel);

        JButton closeButton = new JButton("  X  ");
        closeButton.setMargin(new Insets(0, 0, 0, 0));
        closeButton.setBackground(new Color(255, 255, 255, 255));
        closeButton.setBorder(BorderFactory.createEmptyBorder());
        closeButton.setOpaque(false);
        closeButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int index = tabbedPane.indexOfTabComponent(tabComponent);
                if (index != -1) {
                    tabbedPane.remove(index);
                }

                image_index_max--;
            }
        });

        tabComponent.add(closeButton);
        return tabComponent;
    }
}
